独学プログラマ
https://blog.cloud-acct.com/posts/blog-nuxtjs-new-project

2.Contentfulの使い方。初期設定と各メニューについて学ぶ
https://blog.cloud-acct.com/posts/blog-contentful-signup

3.Contentfulにブログ記事モデルを作成していこう
https://blog.cloud-acct.com/posts/blog-contentful-modeling

4.ContentfulからAPIを取得してNuxt.jsで記事一覧を表示する
https://blog.cloud-acct.com/posts/blog-contentful-api

5.Nuxt.jsにContentfulのブログ記事を表示する
https://blog.cloud-acct.com/posts/blog-nuxt-slugpage

	yarn create nuxt-app nuxt-dokugaku
	cd nuxt-dokugaku
	yarn dev

フレームワークは、なしではなく、Vuetifyを使う
ワーニングがでた（v-content --> v-main）
Bitbucketではなく、GitHubをつかう

GitHubにて新規リポジトリ作成
	名前：dokugaku

terminalにて、
	git init			「.git」フォルダーが作られる。ステージングエリアやローカルリポジトリが作成
	git add .			ワークツリーからステージングエリアへとファイルを上げます
	git commit -m "first commit"	 -m "message" とすることでエディタを起動せずにメッセージを残す
	git remote add origin https://github.com/kfbk/dokugaku.git	このURLは上で作成したリポジトリ名
 	git push -u origin master

Netlify

	AddNewSiteボタン	新規作成
	AddSite			githubを指定
	npm run build --> npm run generate
	Settingにてサイト名の変更
	https://dkgblog.netlify.app/ で作成できた

Contentful
	Space ID: 3j6vizzedtdw
	Delivery API: IAwmuzP5f1FNMo05FPPFZz9AqiUL2g6IwBLo5xRWh4Y
	Preview API: Ew23lX5qXUOjl2wxTOybnNZbusU1rw9r16DXhMeoeeQ

ContentfulのSDKをインストールする
	yarn add contentful

環境変数を扱うdotenvをインストールする
	yarn add @nuxtjs/dotenv

dotenvのセットアップ
.envファイルの環境変数をNuxtに登録する
	nuxt.config.jsに追記します

Contentfulプラグインファイルを作成する
	pluginsディレクトリ内にcontentful.jsファイルを作成
index.vueからContentful APIを取得する
	index.vueを編集
Vuetifyの魔力で見た目をかっこよくする
	warningが出る
SourceNextでPush
	これは記事にはない
Netlifyに環境変数をセットする

5.------------------------------------
ブログ記事の個別ページを用意する
	「posts」ディレクトリを作成して、_slug.vueファイルを作成
Contentfulからブログ記事を取得する
	_slug.vueを編集
ブログ記事のリンクにparamsを埋め込む
	index.vueを編集
デフォルトのアイキャッチを用意する
	defaultEyeCatch.png
共通メソッドをVuexに追加する
	storeディレクトリにindex.jsファイルを作成
	内容を記事通りにしたらERROR（[vuex] already installed. Vue.use(Vuex) should be called only once.）
	一度内容を全部消して、起動。再度、同じ内容を入れたら、今度はエラーにならなかった。
Getterメソッドを利用する
	index.vueを編集
6.Nuxt.jsにContentfulのブログ記事を表示する------------------------------------
Contentfulに渡すAPIキーを、環境ごとに切り替える

7.Contentfulから取得した下書き記事を開発環境に表示する-----------------------
Contentfulに渡すAPIキーを、環境ごとに切り替える
	plugins/contentful.jsを開いて、以下のように編集
下書き記事を一目で分かるようにフラグを立てる
	store/index.jsのGetters内に書きましょう

---ここから---


8.Nuxt.jsのgenerateプロパティに動的なルーティングを追加する-------------------
	記事のように、リロードで変になることないので、ここは無視
9.middlewareを活用しブログ記事取得のパフォーマンスを改善する-----------------
	middlewareを使うことで、Contentfulへリクエストを送信する頻度を減らし、サイトのパフォーマンスを最適

